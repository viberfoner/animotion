(()=>{"use strict";function t(t){return t&&"object"==typeof t&&!Array.isArray(t)}function n(e,...o){if(!o.length)return e;const i=o.shift();if(t(e)&&t(i)){for(const o in i)t(i[o])?(e[o]||Object.assign(e,{[o]:{}}),n(e[o],i[o])):Object.assign(e,{[o]:i[o]});return n(e,...o)}}p5.prototype.createAnim=function(t=!0){return new p5.Anim(this,t)},p5.prototype.copyColor=function(t){if(!t instanceof p5.Color)throw new Error("p5.copyColor must take an instance of p5.color as its only argument");return new p5.Color(this,t.toString())},p5.Anim=function(t,n=!0){this.p=t,this.scene=[],this.loop=n,this.length=0,this.frame=0},p5.Anim.prototype.addObj=function(t,...e){const o=PRIM_ARGS[t];let i=[...o.required];o.optional&&(i=[...i,...o.optional]);const s={};for(let t=0;t<e.length;t++)"object"==typeof e[t]?n(s,e[t]):s[i[t]]=e[t];const r=new p5.Anim.Obj(this.p,t,s,this);return this.scene.push(r),this.updateLength(r),r},p5.Anim.prototype.updateLength=function(t){const n=t.keyFrames.at(-1).frame;this.length<n&&(this.length=n)},p5.Anim.prototype.update=function(){this.frame++,this.loop&&this.frame>=this.length&&this.reset();for(const t of this.scene)t.update(this.frame)},p5.Anim.prototype.render=function(){this.p.push();for(const t of this.scene)t.render();this.p.pop()},p5.Anim.prototype.reset=function(){this.frame=0;for(const t of this.scene)t.reset()}})();